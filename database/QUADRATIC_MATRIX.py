import numpy as np
from collections import namedtuple

sqrt = np.sqrt
GR = (1 + sqrt(5)) / 2

Key = namedtuple('Key', ('LAMBDA', 'GAMMA1', 'GAMMA2', 'V_LEVEL', 'ORBITAL'))

DIC_QUADRATIC_MATRIX = {
        # t1-t1 (1)
        Key('hg', 't1', 't1', 1, 'theta'):
            sqrt(1/6) * np.array([
                    [ -1,  0,  0],
                    [  0, -1,  0],
                    [  0,  0,  2]]),

        Key('hg', 't1', 't1', 1, 'epsilon'):
            sqrt(1/2) * np.array([
                    [  1,  0,  0],
                    [  0, -1,  0],
                    [  0,  0,  0]]),

        Key('hg', 't1', 't1', 1, 'xi'):
            sqrt(1/2) * np.array([
                    [  0,  0,  0],
                    [  0,  0,  1],
                    [  0,  1,  0]]),

        Key('hg', 't1', 't1', 1, 'eta'):
            sqrt(1/2) * np.array([
                    [  0,  0,  1],
                    [  0,  0,  0],
                    [  1,  0,  0]]),

        Key('hg', 't1', 't1', 1, 'zeta'):
            sqrt(1/2) * np.array([
                    [  0,  1,  0],
                    [  1,  0,  0],
                    [  0,  0,  0]]),

        # t1-t2 (1)
        Key('hg', 't1', 't2', 1, 'theta'):
            (1/2) * np.array([
                    [       -GR,         0,         0],
                    [         0,  GR**(-1),         0],
                    [         0,         0,         1]]),

        Key('hg', 't1', 't2', 1, 'epsilon'):
            (1/2) * sqrt(1/3) * np.array([
                    [  GR**(-2),         0,         0],
                    [         0, -GR**(+2),         0],
                    [         0,         0,   sqrt(5)]]),

        Key('hg', 't1', 't2', 1, 'xi'):
            sqrt(1/3) * np.array([
                    [         0,         0,         0],
                    [         0,         0,       -GR],
                    [         0,  GR**(-1),         0]]),

        Key('hg', 't1', 't2', 1, 'eta'):
            sqrt(1/3) * np.array([
                    [         0,         0,  GR**(-1)],
                    [         0,         0,         0],
                    [       -GR,         0,         0]]),

        Key('hg', 't1', 't2', 1, 'zeta'):
            sqrt(1/3) * np.array([
                    [         0,       -GR,         0],
                    [  GR**(-1),         0,         0],
                    [         0,         0,         0]]),

        # t1-g (1)
        Key('hg', 't1', 'g', 1, 'theta'):
            np.array([
                    [ 0,  -(1/4) * GR**(-2),                  0,     0],
                    [ 0,                  0,  -(1/4) * GR**(+2),     0],
                    [ 0,                  0,                  0, (3/4)]]),

        Key('hg', 't1', 'g', 1, 'epsilon'):
            np.array([
                    [ 0, (1/8) * sqrt(1/3) * (9 + sqrt(5)),                                  0,                  0],
                    [ 0,                                 0, (1/8) * sqrt(1/3) * (-9 + sqrt(5)),                  0],
                    [ 0,                                 0,                                  0, -(1/4) * sqrt(5/3)]]),

        Key('hg', 't1', 'g', 1, 'xi'):
            np.array([
                    [ -(1/2) * sqrt(5/3), 0,                             0,                             0],
                    [                  0, 0,                             0, -(1/2) * sqrt(1/3) * GR**(-2)],
                    [                  0, 0, -(1/2) * sqrt(1/3) * GR**(+2),                             0]]),

        Key('hg', 't1', 'g', 1, 'eta'):
            np.array([
                    [                  0,                             0, 0, -(1/2) * sqrt(1/3) * GR**(+2)],
                    [ -(1/2) * sqrt(5/3),                             0, 0,                             0],
                    [                  0, -(1/2) * sqrt(1/3) * GR**(-2), 0,                             0]]),

        Key('hg', 't1', 'g', 1, 'zeta'):
            np.array([
                    [                  0,                             0, -(1/2) * sqrt(1/3) * GR**(-2), 0],
                    [                  0, -(1/2) * sqrt(1/3) * GR**(+2),                             0, 0],
                    [ -(1/2) * sqrt(5/3),                             0,                             0, 0]]),

        # t1-h (1)
        Key('hg', 't1', 'h', 1, 'theta'):
            sqrt(1/2) * np.array([
                    [  0,  0,  1,  0,  0],
                    [  0,  0,  0, -1,  0],
                    [  0,  0,  0,  0,  0]]),

        Key('hg', 't1', 'h', 1, 'epsilon'):
            sqrt(1/6) * np.array([
                    [  0,  0,  1,  0,  0],
                    [  0,  0,  0,  1,  0],
                    [  0,  0,  0,  0, -2]]),

        Key('hg', 't1', 'h', 1, 'xi'):
            sqrt(1/6) * np.array([
                    [ -sqrt(3),       -1,        0,        0,        0],
                    [        0,        0,        0,        0,       -1],
                    [        0,        0,        0,        1,        0]]),

        Key('hg', 't1', 'h', 1, 'eta'):
            sqrt(1/6) * np.array([
                    [       0,       0,       0,       0,       1],
                    [ sqrt(3),      -1,       0,       0,       0],
                    [       0,       0,      -1,       0,       0]]),

        Key('hg', 't1', 'h', 1, 'zeta'):
            sqrt(1/6) * np.array([
                    [  0,  0,  0, -1,  0],
                    [  0,  0,  1,  0,  0],
                    [  0,  2,  0,  0,  0]]),

        # t1-t2 (1)
        Key('hg', 't1', 't2', 1, 'theta'):
            (1/2) * sqrt(1/6) * np.array([
                    [ (1/2) * (-1 + 3 * sqrt(5)),                          0,                          0],
                    [                          0, -(1/2) * (1 + 3 * sqrt(5)),                          0],
                    [                          0,                          0,                          1]]),

        Key('hg', 't1', 't2', 1, 'epsilon'):
            (1/2) * sqrt(1/2) * np.array([
                    [       GR,        0,        0],
                    [        0, GR**(-1),        0],
                    [        0,        0,  -sqrt(5)]]),

        Key('hg', 't1', 't2', 1, 'xi'):
            -sqrt(1/2) * np.array([
                    [ 0, 0, 0],
                    [ 0, 0, 1],
                    [ 0, 1, 0]]),

        Key('hg', 't1', 't2', 1, 'eta'):
            -sqrt(1/2) * np.array([
                    [ 0, 0, 1],
                    [ 0, 0, 0],
                    [ 1, 0, 0]]),

        Key('hg', 't1', 't2', 1, 'zeta'):
            -sqrt(1/2) * np.array([
                    [ 0, 1, 0],
                    [ 1, 0, 0],
                    [ 0, 0, 0]]),

        # t2-h (1)
        Key('hg', 't2', 'h', 1, 'theta'):
            (1/2) * sqrt(1/2) * np.array([
                    [         0,         0,       -GR,         0,         0],
                    [         0,         0,         0, -GR**(-1),         0],
                    [         0,         0,         0,         0,   sqrt(5)]]),

        Key('hg', 't2', 'h', 1, 'epsilon'):
            (1/2) * sqrt(1/6) * np.array([
                    [ 0, 0, (1/2) * (-1 + 3 * sqrt(5)),                          0, 0],
                    [ 0, 0,                          0, -(1/2) * (1 + 3 * sqrt(5)), 0],
                    [ 0, 0,                          0,                          0, 1]]),

        Key('hg', 't2', 'h', 1, 'xi'):
            (1/2) * sqrt(1/6) * np.array([
                    [                sqrt(3) * GR, -(1/2) * (-1 + 3 * sqrt(5)),  0,  0,  0],
                    [                           0,                           0,  0,  0, -2],
                    [                           0,                           0,  0,  2,  0]]),

        Key('hg', 't2', 'h', 1, 'eta'):
            (1/2) * sqrt(1/6) * np.array([
                    [                         0,                         0,  0,  0,  2],
                    [        sqrt(3) * GR**(-1), (1/2) * (1 + 3 * sqrt(5)),  0,  0,  0],
                    [                         0,                         0, -2,  0,  0]]),

        Key('hg', 't2', 'h', 1, 'zeta'):
            (1/2) * sqrt(1/6) * np.array([
                    [         0,         0,         0,        -2,         0],
                    [         0,         0,         2,         0,         0],
                    [ -sqrt(15),        -1,         0,         0,         0]]),

        # g-g (1)
        Key('hg', 'g', 'g', 1, 'theta'):
            np.array([
                    [                0,                0,                0,                0],
                    [                0,      -(1/2) * GR,                0,                0],
                    [                0,                0, (1/2) * GR**(-1),                0],
                    [                0,                0,                0,              1/2]]),

        Key('hg', 'g', 'g', 1, 'epsilon'):
            np.array([
                    [ 0,                             0,                             0,                             0],
                    [ 0,  (1/2) * sqrt(1/3) * GR**(-2),                             0,                             0],
                    [ 0,                             0, -(1/2) * sqrt(1/3) * GR**(+2),                             0],
                    [ 0,                             0,                             0,             (1/2) * sqrt(5/3)]]),

        Key('hg', 'g', 'g', 1, 'xi'):
            np.array([
                    [                  0,  (1/2) * sqrt(5/3),                  0,                  0],
                    [  (1/2) * sqrt(5/3),                  0,                  0,                  0],
                    [                  0,                  0,                  0, -(1/2) * sqrt(1/3)],
                    [                  0,                  0, -(1/2) * sqrt(1/3),                  0]]),

        Key('hg', 'g', 'g', 1, 'eta'):
            np.array([
                    [                  0,                  0,  (1/2) * sqrt(5/3),                  0],
                    [                  0,                  0,                  0, -(1/2) * sqrt(1/3)],
                    [  (1/2) * sqrt(5/3),                  0,                  0,                  0],
                    [                  0, -(1/2) * sqrt(1/3),                  0,                  0]]),

        Key('hg', 'g', 'g', 1, 'zeta'):
            np.array([
                    [                  0,                  0,                  0,  (1/2) * sqrt(5/3)],
                    [                  0,                  0, -(1/2) * sqrt(1/3),                  0],
                    [                  0, -(1/2) * sqrt(1/3),                  0,                  0],
                    [  (1/2) * sqrt(5/3),                  0,                  0,                  0]]),

        # g-h (1)
        Key('hg', 'g', 'h', 1, 'theta'):
            (1/4) * sqrt(1/2) * np.array([
                    [            0, -2 * sqrt(5),            0,            0,            0],
                    [            0,            0,     GR**(-2),            0,            0],
                    [            0,            0,            0,    -GR**(+2),            0],
                    [            0,            0,            0,            0,      sqrt(5)]]),

        Key('hg', 'g', 'h', 1, 'epsilon'):
            (1/4) * sqrt(1/2) * np.array([
                    [         2 * sqrt(5),                   0,                   0,                   0,                   0],
                    [                   0,                   0,        sqrt(3) * GR,                   0,                   0],
                    [                   0,                   0,                   0, -sqrt(3) * GR**(-1),                   0],
                    [                   0,                   0,                   0,                   0,            -sqrt(3)]]),

        Key('hg', 'g', 'h', 1, 'xi'):
            (1/4) * sqrt(1/2) * np.array([
                    [             0,             0,             0,             0,             0],
                    [     -GR**(-2), -sqrt(3) * GR,             0,             0,             0],
                    [             0,             0,             0,             0,   2 * sqrt(3)],
                    [             0,             0,             0,  -2 * sqrt(3),             0]]),

        Key('hg', 'g', 'h', 1, 'eta'):
            (1/4) * sqrt(1/2) * np.array([
                    [                  0,                  0,                  0,                  0,                  0],
                    [                  0,                  0,                  0,                  0,       -2 * sqrt(3)],
                    [           GR**(+2), sqrt(3) * GR**(-1),                  0,                  0,                  0],
                    [                  0,                  0,        2 * sqrt(3),                  0,                  0]]),

        Key('hg', 'g', 'h', 1, 'zeta'):
            (1/4) * sqrt(1/2) * np.array([
                    [            0,            0,            0,            0,            0],
                    [            0,            0,            0,  2 * sqrt(3),            0],
                    [            0,            0, -2 * sqrt(3),            0,            0],
                    [     -sqrt(5),      sqrt(3),            0,            0,            0]]),

        # g-h (2)
        Key('hg', 'g', 'h', 2, 'theta'):
            (1/4) * sqrt(1/6) * np.array([
                    [                   -6,                    0,                    0,                    0,                    0],
                    [                    0,                    0,        sqrt(15) * GR,                    0,                    0],
                    [                    0,                    0,                    0, -sqrt(15) * GR**(-1),                    0],
                    [                    0,                    0,                    0,                    0,            -sqrt(15)]]),

        Key('hg', 'g', 'h', 2, 'epsilon'):
            (1/4) * sqrt(1/6) * np.array([
                    [                   0,                  -6,                   0,                   0,                   0],
                    [                   0,                   0, -sqrt(5) * GR**(-2),                   0,                   0],
                    [                   0,                   0,                   0,  sqrt(5) * GR**(+2),                   0],
                    [                   0,                   0,                   0,                   0,                  -5]]),

        Key('hg', 'g', 'h', 2, 'xi'):
            (1/4) * sqrt(1/6) * np.array([
                    [                   0,                   0,                   4,                   0,                   0],
                    [       sqrt(15) * GR, -sqrt(5) * GR**(-2),                   0,                   0,                   0],
                    [                   0,                   0,                   0,                   0,        -2 * sqrt(5)],
                    [                   0,                   0,                   0,        -2 * sqrt(5),                   0]]),

        Key('hg', 'g', 'h', 2, 'eta'):
            (1/4) * sqrt(1/6) * np.array([
                    [                    0,                    0,                    0,                    4,                    0],
                    [                    0,                    0,                    0,                    0,         -2 * sqrt(5)],
                    [ -sqrt(15) * GR**(-1),   sqrt(5) * GR**(+2),                    0,                    0,                    0],
                    [                    0,                    0,         -2 * sqrt(5),                    0,                    0]]),

        Key('hg', 'g', 'h', 2, 'zeta'):
            (1/4) * sqrt(1/6) * np.array([
                    [            0,            0,            0,            0,            4],
                    [            0,            0,            0, -2 * sqrt(5),            0],
                    [            0,            0, -2 * sqrt(5),            0,            0],
                    [    -sqrt(15),           -5,            0,            0,            0]]),

        # h-h (1)
        Key('hg', 'h', 'h', 1, 'theta'):
            sqrt(1/14) * np.array([
                    [ -2,  0,  0,  0,  0],
                    [  0,  2,  0,  0,  0],
                    [  0,  0, -1,  0,  0],
                    [  0,  0,  0, -1,  0],
                    [  0,  0,  0,  0,  2]]),

        Key('hg', 'h', 'h', 1, 'epsilon'):
            sqrt(1/14) * np.array([
                    [        0,        2,        0,        0,        0],
                    [        2,        0,        0,        0,        0],
                    [        0,        0,  sqrt(3),        0,        0],
                    [        0,        0,        0, -sqrt(3),        0],
                    [        0,        0,        0,        0,        0]]),

        Key('hg', 'h', 'h', 1, 'xi'):
            sqrt(1/14) * np.array([
                    [        0,        0,       -1,        0,        0],
                    [        0,        0,  sqrt(3),        0,        0],
                    [       -1,  sqrt(3),        0,        0,        0],
                    [        0,        0,        0,        0, -sqrt(3)],
                    [        0,        0,        0, -sqrt(3),        0]]),

        Key('hg', 'h', 'h', 1, 'eta'):
            sqrt(1/14) * np.array([
                    [        0,        0,        0,       -1,        0],
                    [        0,        0,        0, -sqrt(3),        0],
                    [        0,        0,        0,        0, -sqrt(3)],
                    [       -1, -sqrt(3),        0,        0,        0],
                    [        0,        0, -sqrt(3),        0,        0]]),

        Key('hg', 'h', 'h', 1, 'zeta'):
            sqrt(1/14) * np.array([
                    [        0,        0,        0,        0,        2],
                    [        0,        0,        0,        0,        0],
                    [        0,        0,        0, -sqrt(3),        0],
                    [        0,        0, -sqrt(3),        0,        0],
                    [        2,        0,        0,        0,        0]]),

        # h-h (2)
        Key('hg', 'h', 'h', 2, 'theta'):
            (1/8) * sqrt(1/14) * np.array([
                    [        3 * sqrt(5),       -7 * sqrt(3),                  0,                  0,                  0],
                    [       -7 * sqrt(3),       -3 * sqrt(5),                  0,                  0,                  0],
                    [                  0,                  0,  2 * (7 - sqrt(5)),                  0,                  0],
                    [                  0,                  0,                  0, -2 * (7 + sqrt(5)),                  0],
                    [                  0,                  0,                  0,                  0,        4 * sqrt(5)]]),

        Key('hg', 'h', 'h', 2, 'epsilon'):
            (1/24) * sqrt(3/14) * np.array([
                    [           -21, -3 * sqrt(15),             0,             0,             0],
                    [ -3 * sqrt(15),            21,             0,             0,             0],
                    [             0,             0,  4 * GR**(+4),             0,             0],
                    [             0,             0,             0,  4 * GR**(-4),             0],
                    [             0,             0,             0,             0,           -28]]),

        Key('hg', 'h', 'h', 2, 'xi'):
            (1/12) * sqrt(1/14) * np.array([
                    [                      0,                      0,      3 * (7 - sqrt(5)),                      0,                      0],
                    [                      0,                      0, 2 * sqrt(3) * GR**(+4),                      0,                      0],
                    [      3 * (7 - sqrt(5)), 2 * sqrt(3) * GR**(+4),                      0,                      0,                      0],
                    [                      0,                      0,                      0,                      0,           4 * sqrt(15)],
                    [                      0,                      0,                      0,           4 * sqrt(15),                      0]]),

        Key('hg', 'h', 'h', 2, 'eta'):
            (1/12) * sqrt(1/14) * np.array([
                    [                      0,                      0,                      0,     -3 * (7 + sqrt(5)),                      0],
                    [                      0,                      0,                      0, 2 * sqrt(3) * GR**(-4),                      0],
                    [                      0,                      0,                      0,                      0,           4 * sqrt(15)],
                    [     -3 * (7 + sqrt(5)), 2 * sqrt(3) * GR**(-4),                      0,                      0,                      0],
                    [                      0,                      0,           4 * sqrt(15),                      0,                      0]]),

        Key('hg', 'h', 'h', 2, 'zeta'):
            (1/6) * sqrt(1/14) * np.array([
                    [            0,            0,            0,            0,  3 * sqrt(5)],
                    [            0,            0,            0,            0, -7 * sqrt(3)],
                    [            0,            0,            0, 2 * sqrt(15),            0],
                    [            0,            0, 2 * sqrt(15),            0,            0],
                    [  3 * sqrt(5), -7 * sqrt(3),            0,            0,            0]]),
        }
